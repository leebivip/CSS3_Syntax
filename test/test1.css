/* single line block comment */

/* multi
   line
   block
   comment */

/* mixed /* block * / * ///
   / *
   *** /*
   comment
*/

/* valid @charset */

@charset 'UTF-8';
@charset "UTF-8";
@charset 'utf-8';
@charset "utf-8";
@charset 'UTF8';
@charset "UTF8";
@charset 'utf8';
@charset "utf8";
@charset 'unicode-1-1-utf-8';
@charset "unicode-1-1-utf-8";
@charset 'UNICODE-1-1-UTF-8';
@charset "UNICODE-1-1-UTF-8";

/* invalid @charset */

@charset 'iso-8859-15'; /* non UTF-8 */
@charset 'utf8';        /* mismatched single- and double-quote */
@charset UTF-8;         /* not a quoted string */

/* valid @import */

@import "mystyle.css";
@import url("mystyle.css");
@import url("fineprint.css") print;
@import url("fineprint.css") only print;
@import 'custom.css';
@import url("chrome://communicator/skin/");
@import url('landscape.css') screen and (orientation:landscape) not (grid:0);
@import url("narrow.css") screen and (100px <= width <= 400px);
@import url("bluish.css") projection, tv;  /* deprecated media types */
@import url("narrow.css") handheld and (max-width: 400px);
@import url("bluish.css") projection, tv;
@import "common.css" screen, projection;

/* valid url() */

url("http://www.example.com/pinkish.gif");
url(http://www.example.com/pinkish.gif);
url("tile.png");

/* valid @media */

@media print {
  body { font-size: 10pt; }
}
@media screen {
  body { font-size: 13px; }
}
@media screen, print {
  body { line-height: 1.2; }
}
@media screen and (color), projection and (color) {}
@media all {}
@media {}
@media not screen and (color) {}
@media only screen and (color) {}
@media (resolution >= 2dppx) {}
@media print and (min-resolution: 300dpi) {}
@media print and (min-resolution: 118dpcm) {}
@media (scan: interlace) {}
@media (grid) and (max-width: 15em) {}
@media (color) {}
@media (min-color: 1) {}
@media (color >= 8) {}
@media (8 < color) {}
@media (scripting: enabled) {}
@media (scripting) {}
@media not (scripting) {}
@media (color-index) {}
@media (color-index >= 1) {}
@media (min-color-index: 256) {}
@media (monochrome) {}
@media (monochrome >= 2) {}
@media print and (color) {}
@media print and (monochrome) {}
@media (pointer:coarse) {
  @media screen and (color) {
    input[type="checkbox"], input[type="radio"] {
        min-width:30px;
        min-height:40px;
        background:transparent;
    }
    @font-face {

    }
    @keyframes {
      from {

      }
      100% {

      }
    }
    @media (color) {

    }
  }
}

@media (hover) {
  .menu > li        {display:inline-block;}
  .menu ul          {display:none; position:absolute;}
  .menu li:hover ul {display:block; list-style:none; padding:0;}
  /* ... */
}
@media (light-level: normal) {
  p { background: url("texture.jpg"); color: #333; }
}
@media (light-level: dim) {
  p { background: #222; color: #ccc; }
}
@media (light-level: washed) {
  p { background: white; color: black; font-size: 2em; }
}
@media (scripting:initial-only) {}
@media (scripting:enabled) {}
@media (scripting:none) {}
@media (400px < width < 1000px) {}
@media (height > 600px) {}
@media (600px < height) {}
@media (device-aspect-ratio: 16/9) {}
@media (device-aspect-ratio: 32/18) {}
@media (device-aspect-ratio: 1280/720) {}
@media (device-aspect-ratio: 2560/1440) {}
@media all {}

@media (400px < width){
  @media all {
    @media {
        /* color: black; */
    }
  }
}

/* invalid @media */

@media (min-grid: 0) {}             /* no min- prefix for grid */
@media (example, all,), speech {}   /* invalid media query list */
@media &test, screen {}             /* invalid media feature &test */
@media screen or and (color) {}     /* or and */
@media screen and (max-weight: 3kg) and (color), (color) {}  /* no max-weight media feature */
@media (min-orientation:portrait){} /* orientation doesn't have min-prefix */
@media (color:20example) {}         /* invalid color */
@media (min-width: -100px) {}       /* negative width */
@media test;,all {}
@media screen {
  @keyframes {
    from {

    }
    to {

    }

    100% {

    }
  }
}

/* valid @namespace */

@namespace url(http://www.w3.org/1999/xhtml);
@namespace svg url(http://www.w3.org/2000/svg);
@namespace "kaljblsdf";

/* valid @page */

@page :left {
margin-left: 3cm;
margin-right: 4cm;
}

@page :right {
margin-left: 4cm;
margin-right: 3cm;
}

@page { margin: 2cm; } /* All margins set to 2cm */
@page :first {
margin-top: 10cm; /* Top margin on first page 10cm */
}
@page :blank {
  @top-center { content: "This page is intentionally left blank"; }
}
@page :blank {
  @top-center { content: none; }
}
@page :right {
  @top-center { content: "Preliminary edition"; }
  @bottom-center { content: counter(page); }
}

@page {}
@page :left {}
@page :right {}
@page LandscapeTable {}
@page CompanyLetterHead:first {} /*  identifier and pseudo page. */
@page:first {}
@page toc, index {}
@page :blank:first {}
@page {
 @top-left { ... /* document name */ }
 @bottom-center { ... /* page number */}
}
@page :left { @left-middle { ... /* page number in left margin */ }}
@page :right{ @right-middle { ... /* page number in right margins of right pages */}}

@page :left { @bottom-left-corner { ... /* left page numbers */ }}
@page :right { @bottom-right-corner { ... /* right page numbers */ }}
@page :first { @bottom-left-corner { ... /* empty footer on 1st page */ }
             @bottom-right-corner { ... /* empty footer */ } }
@page { } /* specificity = (0,0,0) */
@page :left { } /* specificity = (0,0,1) */
@page :first { } /* specificity = (0,1,0) */
@page :blank:left { } /* specificity = (0,1,1) */
@page artsy { } /* specificity = (1,0,0) */
@page artsy:left { } /* specificity = (1,0,1) */
@page artsy:first { } /* specificity = (1,1,0) */
@page :left {
  margin-left: 4cm;
}

@page {
  margin-left: 3cm;
}

@page :first {
  color: green;

  @top-left {
    content: "foo";
    color: blue;
  }

  @top-right {
    content: "bar";
  }
}

@media screen {
  @page { color: red;
    @top-center {
      content: "Page " counter(page);
    }
    @bottom-center {

    }
  }
}

@page { margin: 25mm;}

@page { font-size: 14pt;}

@page {
  size: 8.5in 11in;
  margin: 10%;

  @top-left {
    content: "Hamlet";
  }
  @top-right {
    content: "Page " counter(page);
  }
}

@page {
  @top-left-corner { content: " "; border: solid green; }
  @top-right-corner { content: url(foo.png); border: solid green; }
  @bottom-right-corner { content: counter(page); border: solid green; }
  @bottom-left-corner { content: normal; border: solid green; }
}

@page {
  margin: 10%;

  @top-center {
    font-family: sans-serif;
    font-weight: bold;
    font-size: 2em;
    content: counter(page);
  }
}

@page {
  counter-increment: page 2;
}
@page {
margin: 10%;
@top-center { content: "Chapter" counter(chapter); }
}
@page {
  size: 4in 6in;
}
@media (max-width: 6in) {
  @page {
    size: letter;
  }
}
@page {
size: A4 landscape;
}
@page {
size: 8.5in 11in;/* width height */
}
@media print and (width: 21cm) and (height: 29.7cm) {
  @page {
     margin: 3cm;
  }
}
/* style sheet for "letter" printing */
@media print and (width: 8.5in) and (height: 11in) {
  @page {
      margin: 1in;
  }
}
@page narrow { size: 9cm 18cm; }
@page rotated { size: landscape; }
@page :first, :blank { @bottom-center { content: none; } }
@page :first:left { @bottom-left { content: none; } }

/* valid @font-face */

@font-face {
  font-family: Gentium;
  src: url(http://example.com/fonts/Gentium.woff);
}

@font-face {
  font-family: bodytext;
  src: url(ideal-sans-serif.woff) format("woff"),
       url(basic-sans-serif.ttf) format("opentype");
}
@font-face {
  font-family: MyGentium;
  src: local(Gentium),    /* use locally available Gentium */
       url(Gentium.woff); /* otherwise, download it */
}
@font-face {
  font-family: MyGentium;
  src: local(Gentium Bold),    /* full font name */
       local(Gentium-Bold),    /* Postscript name */
       url(GentiumBold.woff);  /* otherwise, download it */
  font-weight: bold;
}
@font-face {
  font-family: Headline;
  src: local(Futura-Medium),
       url(fonts.svg#MyGeometricModern) format("svg");
}
@media screen {
  @font-face {
    font-family: jpgothic;
    src: local(HiraKakuPro-W3), local(Meiryo), local(IPAPGothic);
  }
  @media (color) {

  }
}
@font-face {
  font-family: Hoefler Text Ornaments;
  /* has the same font properties as Hoefler Text Regular */
  src: local(HoeflerText-Ornaments);
}

@font-face {
  font-family: SectionHeader;
  src: local("Arial Lihavoitu");  /* Finnish fullname for Arial Bold, should fail */
  font-weight: bold;
}
@font-face {
  font-family: MainText;
  src: url(gentium.eot);                     /* for use with older user agents */
  src: local("Gentium"), url(gentium.woff);  /* Overrides src definition */
}
@font-face {
  font-family: BBCBengali;
  src: url(fonts/BBCBengali.woff) format("woff");
  unicode-range: U+00-FF, U+980-9FF;
}
@font-face {
  font-family: STIXGeneral;
  src: local(STIXGeneral), url(/stixfonts/STIXGeneral.otf);
  unicode-range: U+000-49F, U+2000-27FF, U+2900-2BFF, U+1D400-1D7FF;
}
@font-face {
  font-family: JapaneseWithGentium;
  src: local(MSMincho);
  /* no range specified, defaults to entire range */
}

@font-face {
  font-family: JapaneseWithGentium;
  src: url(../fonts/Gentium.woff);
  unicode-range: U+0-2FF;
}
/* fallback font - size: 4.5MB */
@font-face {
  font-family: DroidSans;
  src: url(DroidSansFallback.woff);
  /* no range specified, defaults to entire range */
}

/* Japanese glyphs - size: 1.2MB */
@font-face {
  font-family: DroidSans;
  src: url(DroidSansJapanese.woff);
  unicode-range: U+3000-9FFF, U+ff??;
}

/* Latin, Greek, Cyrillic along with some
   punctuation and symbols - size: 190KB */
@font-face {
  font-family: DroidSans;
  src: url(DroidSans.woff);
  unicode-range: U+000-5FF, U+1e00-1fff, U+2000-2300;
}
@font-face {
  font-family: GeometricModern;
  src: url(font.woff);
}

/* valid @font-feature-values */

@font-feature-values Noble Script { @swash { swishy: 1; flowing: 2; } }

@font-feature-values Jupiter Sans {
  @swash {
    delicate: 1;
    flowing: 2;
  }
}

@font-feature-values Bongo {
  @swash { ornate: 1; }
  @swash { double-loops: 1; }
  @styleset { double-W: 14; sharp-terminals: 16 1; }
}
  @font-feature-values Mercury Serif {
    @styleset {
      stacked-g: 3; /* "two-storey" versions of g, a */
      stacked-a: 4;
    }
  }

@font-feature-values Mercury Serif {
  @styleset {
    geometric-m: 7; /* alternate version of m */
  }
}

@font-feature-values Taisho Gothic {
  @annotation { boxed: 1; circled: 4; }
}

@font-feature-values Otaru Kisa {
  @annotation { circled: 1; black-boxed: 3; }
}
@media {
  @font-feature-values Mars Serif {
    @styleset {
      alt-g: 1;        /* implies ss01 = 1 */
      curly-quotes: 3; /* implies ss03 = 1 */
      code: 4 5;       /* implies ss04 = 1, ss05 = 1 */
    }

    @styleset {
      dumb: 125;        /* >99, ignored */
    }

    @swash {
      swishy: 3 5;     /* more than 1 value for swash, syntax error */
    }
  }
}

@font-feature-values MM Greek   {
  @character-variant { alpha-2: 1 2; }   /* implies cv01 = 2 */
  @character-variant { beta-3: 2 3; }    /* implies cv02 = 3 */
  @character-variant { epsilon: 5 3 6; } /* more than 2 values, syntax error, definition ignored */
  @character-variant { gamma: 12; }      /* implies cv12 = 1 */
  @character-variant { zeta:   20 3; }   /* implies cv20 = 3 */
  @character-variant { zeta-2: 20 2; }   /* implies cv20 = 2 */
  @character-variant { silly: 105; }     /* >99, ignored */
  @character-variant { dumb: 323 3; }    /* >99, ignored */
}

@font-feature-values Athena Ruby {
  @character-variant {
    leo-B: 2 1;
    leo-M: 13 3;
    leo-alt-N: 14 1;
    leo-N: 14 2;
    leo-T: 20 1;
    leo-U: 21 2;
    leo-alt-U: 21 4;
  }
}

/* invalid @font-feature-values */

@font-feature-values Bongo {
  @swash { ornate: 1; }
  annotation { boxed: 4; } /* should be @annotation! */
  @swash { double-loops: 1; flowing: -1; } /* negative value */
  @ornaments ; /* incomplete definition */
  @styleset { double-W: 14; sharp-terminals: 16 1 } /* missing ; */
  redrum  /* random editing mistake */
;
}

/* valid @keyframes */

@media screen {
  #sidebar ul li a {

  }

  body {

  }

  @media (color) {
    html {

    }
    p:nth-child(2n+1) {

    }
  }

  @keyframes identifier {
    0% { top: 0; }
    from {

    }
    to {

    }
    50% { top: 30px; left: 20px; }
    50% { top: 10px; }
    100% { top: 0; }
  }
}
@-webkit-keyframes NAME-YOUR-ANIMATION {
  0%   { opacity: 0; }
  100% { opacity: 1; }
}
@-moz-keyframes NAME-YOUR-ANIMATION {
  0%   { opacity: 0; }
  100% { opacity: 1; }
}
@keyframes NAME-YOUR-ANIMATION {
  0%   { opacity: 0; }
  100% { opacity: 1; }
}
#box {
  -webkit-animation: NAME-YOUR-ANIMATION 5s infinite; /* Safari 4+ */
  -moz-animation:    NAME-YOUR-ANIMATION 5s infinite; /* Fx 5+ */
  -o-animation:      NAME-YOUR-ANIMATION 5s infinite; /* Opera 12+ */
  animation:         NAME-YOUR-ANIMATION 5s infinite; /* IE 10+ */
}
@keyframes fontbulger {
  0% {
    font-size: 10px;
  }
  30% {
    font-size: 15px;
  }
  100% {
    font-size: 12px;
  }
}
#box {
   -animation: fontbulger 2s infinite;
}

@keyframes fontbulger {
  0%, 100% {
    font-size: 10px;
  }
  50% {
    font-size: 12px;
  }
}
.box {
 animation-name: bounce;
 animation-duration: 4s;
 animation-iteration-count: 10;
 animation-direction: alternate;
 animation-timing-function: ease-out;
 animation-fill-mode: forwards;
 animation-delay: 2s;
}
p {
  -webkit-animation: test 1s 2s 3 alternate backwards;
}
@keyframes infinite-spinning {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.animate-this {
   animation:
      first-animation 2s infinite,
      another-animation 1s;
}
@keyframes move {
  from { top: 0; left: 0; }
  to   { top: 100px; left: 100px; }
}
.move {
  animation: move 10s steps(10) infinite alternate;
}


/* valid @supports */

@supports (display: flexbox) {
  @supports (border: 5px solid red) {

  }
}


@media screen {
  @supports ( transform-origin: 5% 5% ) {
    @supports (display: flexbox) {
      @media screen {
        html {

        }
        p {

        }
      }
    }

    /* specific rules */
    @keyframes {}
  }
}

@supports not ( transform-origin: 10em 10em 10em ) {
  /* specific rules */
}
@supports not ( not ( transform-origin: 2px ) ) {
  @supports (transform-origin: 2px) {
    p {
      line-height: 1.5em;
    }
  }
  /* specific rules */
}

@supports (display: flexbox) and
  ( not (display: inline-grid) ) {
  /* specific rules */
}
@supports (display: table-cell) and (display: list-item) {
  /* specific rules */
}
@supports (display: table-cell) and (display: list-item) and (display:run-in) {
  /* specific rules */
}

@supports (display: table-cell) and ((display: list-item) and (display:run-in)) {
  /* specific rules */
}

@supports ( transform-style: preserve ) or ( -moz-transform-style: preserve ) {
  /* specific rules */
  html {

  }
  #button {
    border: 1px solid black;
  }
}

@supports ( transform-style: preserve ) or (-moz-transform-style: preserve) or
( -o-transform-style: preserve ) or ( -webkit-transform-style: preserve  ) {
  /* specific rules */
}
@supports ( transform-style: preserve-3d ) or (( -moz-transform-style: preserve-3d ) or
(( -o-transform-style: preserve-3d ) or ( -webkit-transform-style: preserve-3d  ))) {
  /* specific rules */
}

@supports (animation-name: test) {
    /* specific CSS applied when animations are supported unprefixed */
    @keyframes { /* @supports being a CSS conditional group at-rule, it can includes other relevent at-rules */
    }
}

@supports ( (perspective: 10px) or (-moz-perspective: 10px) or (-webkit-perspective: 10px) or
            (-ms-perspective: 10px) or (-o-perspective: 10px)) {
    /* specific CSS applied when 3D transforms, eventually prefixed, are supported */
}

@supports ( not ((text-align-last:justify) or (-moz-text-align-last:justify) )){
    /* specific CSS applied to simulate text-align-last:justify */
}
@supports not (border-image: url(foo.png) 33%) {
    .foo {
        border: 3px solid rgba(0,0,0,.3);
        background: url(alternative-bg.png) beige;
    }
}
@supports not (border-image: url(foo.png) 33%)
          or (-moz-border-image: url(foo.png) 33%)
          or (-webkit-border-image: url(foo.png) 33%) {
}

/* css selectors level 4 draft - feb 13, 2014 */

* {}
*:not(div:first-child)
div {}
div:not(p, li, dt, dd) {}
div:matches(p, li, dt, dd:link) {}
div.warning {}
*.warning {}
div#myid {}
div[foo] {}
div[foo="bar"] {}
div[foo="bar" i] {}
div[foo~="bar"] {}
div[foo^="bar"] {}
div[foo$="bar"] {}
div[foo*="bar"] {}
div[foo|="en"] {}
[foo|att=val] { color: blue; }
[*|att] { color: yellow; }
[|att] { color: green; }
[att] { color: green; }
div:dir(ltr) {}
div:lang(zh, *-hant) {}
div:any-link {}
div:link {}
div:visited {}
div:local-link {}
div:local-link(0) {}
div:target {}
div:scope {}
div:current {}
div:current(p, li, dt, dd) {}
div:past {}
div:future {}
div:active {}
div:hover {}
div:focus {}
div:active-drop {}
div:valid-drop {}
div:invalid-drop {}
div:enabled {}
div:disabled {}
div:read-only {}
div:read-write {}
div:placeholder-shown {}
div:default {}
div:checked {}
div:indeterminate {}
div:valid {}
div:invalid {}
div:in-range {}
div:out-of-range {}
div:required {}
div:optional {}
div:required {}
div:optional {}
div:root {}
div:empty {}
div:blank {}
div:nth-child(0) {}
div:nth-child(1) {}
div:nth-child(-1) {}
div:nth-child(-100) {}
div:nth-child(n) {}
div:nth-child(-n+3) {}
div:nth-child(2n) {}
div:nth-child(2n+1) {}
div:nth-child(odd) {}
div:nth-child(even) {}
div:nth-child(+n) {}
div:nth-child(-n) {}
div:nth-child(2n+5) {}
div:nth-child(+2n+5) {}
div:nth-child(+n-5) {}
div:nth-last-child(2n+1) {}
div:nth-last-child(n) {}
div:first-child {}
div:last-child {}
div:only-child {}
div:nth-of-type(n) {}
div:nth-last-of-type(n) {}
div:first-of-type {}
div:last-of-type {}
div:only-of-type {}
div:nth-match(2n+1 of p) {}
div:nth-last-match(n of h1, html, p, body) {}
div:nth-last-match(even of body:nth-last-match()) {}
div:nth-last-match(n of p:root) {}
div:nth-last-match(n of div:local-link(0)) {}
div p {}
div > p {}
div + p {}
div ~ p {}
div /foo/ p {}
!div > p {}
p || div {}
div:nth-column(n) {}
div:nth-last-column(n) {}
div::after {}
div::before {}
::selection {}
div::first-line {}
div::first-letter {}
:not(:not(:link)) {}
p:not(p) {}
html|*:not(:link):not(:visited) {}
*|*:matches(:hover, :focus) {}
*|*:matches(*:hover, *:focus) {}
p {
  var-hello: #ffffff; var-hi: #eeeeee;
  color: var(hi) !important; counter-increment: counter(hello);
  content: calc(100) !important;
  content: attr(hello);
}
label:matches(:hover, :focus) /for/ input,       /* association by "for" attribute */
label:matches(:hover, :focus):not([for]) input { /* association by containment */
box-shadow: yellow 0 0 10px;
}

/* Case insensitive HTML tag and case-insensitive pseudo-class */

OL > LI:only-child {}

/* moz prefixed properties */

p{-moz-animation: blue;}
p{-moz-animation-delay: blue;}
p{-moz-animation-direction: blue;}
p{-moz-animation-duration: blue;}
p{-moz-animation-fill-mode: blue;}
p{-moz-animation-iteration-count: blue;}
p{-moz-animation-name: blue;}
p{-moz-animation-play-state: blue;}
p{-moz-animation-timing-function: blue;}
p{-moz-appearance: blue;}
p{-moz-backface-visibility: blue;}
p{-moz-background-clip: blue;}
p{-moz-background-inline-policy: blue;}
p{-moz-background-origin: blue;}
p{-moz-background-size: blue;}
p{-moz-binding: blue;}
p{-moz-border-bottom-colors: blue;}
p{-moz-border-end: blue;}
p{-moz-border-end-color: blue;}
p{-moz-border-end-style: blue;}
p{-moz-border-end-width: blue;}
p{-moz-border-image: blue;}
p{-moz-border-left-colors: blue;}
p{-moz-border-right-colors: blue;}
p{-moz-border-start: blue;}
p{-moz-border-start-color: blue;}
p{-moz-border-start-style: blue;}
p{-moz-border-start-width: blue;}
p{-moz-border-top-colors: blue;}
p{-moz-box-align: blue;}
p{-moz-box-direction: blue;}
p{-moz-box-flex: blue;}
p{-moz-box-ordinal-group: blue;}
p{-moz-box-orient: blue;}
p{-moz-box-pack: blue;}
p{-moz-box-sizing: blue;}
p{-moz-column-count: blue;}
p{-moz-column-fill: blue;}
p{-moz-column-gap: blue;}
p{-moz-column-rule: blue;}
p{-moz-column-rule-color: blue;}
p{-moz-column-rule-style: blue;}
p{-moz-column-rule-width: blue;}
p{-moz-column-width: blue;}
p{-moz-float-edge: blue;}
p{-moz-font-feature-settings: blue;}
p{-moz-font-language-override: blue;}
p{-moz-force-broken-image-icon: blue;}
p{-moz-hyphens: blue;}
p{-moz-image-region: blue;}
p{-moz-margin-end: blue;}
p{-moz-margin-start: blue;}
p{-moz-opacity: blue;}
p{-moz-orient: blue;}
p{-moz-outline: blue;}
p{-moz-outline-color: blue;}
p{-moz-outline-offset: blue;}
p{-moz-outline-radius: blue;}
p{-moz-outline-radius-bottomleft: blue;}
p{-moz-outline-radius-bottomright: blue;}
p{-moz-outline-radius-topleft: blue;}
p{-moz-outline-radius-topright: blue;}
p{-moz-outline-style: blue;}
p{-moz-outline-width: blue;}
p{-moz-padding-end: blue;}
p{-moz-padding-start: blue;}
p{-moz-perspective: blue;}
p{-moz-perspective-origin: blue;}
p{-moz-script-level: blue;}
p{-moz-script-min-size: blue;}
p{-moz-script-size-multiplier: blue;}
p{-moz-stack-sizing: blue;}
p{-moz-text-align-last: blue;}
p{-moz-text-decoration-color: blue;}
p{-moz-text-decoration-line: blue;}
p{-moz-text-decoration-style: blue;}
p{-moz-transform: blue;}
p{-moz-transform-origin: blue;}
p{-moz-transform-style: blue;}
p{-moz-transition: blue;}
p{-moz-transition-delay: blue;}
p{-moz-transition-duration: blue;}
p{-moz-transition-property: blue;}
p{-moz-transition-timing-function: blue;}
p{-moz-user-focus: blue;}
p{-moz-user-input: blue;}
p{-moz-user-modify: blue;}
p{-moz-user-select: blue;}
p{-moz-window-shadow: blue;}

/* moz unprefixed properties */

p {clip-path: blue;}
p {filter: blue;}
p {mask: blue;}
p {pointer-events: blue;}

/* moz unprefixed named values */

p{ color: button;}
p{ color: button-arrow-down;}
p{ color: button-arrow-next;}
p{ color: button-arrow-previous;}
p{ color: button-arrow-up;}
p{ color: button-bevel;}
p{ color: checkbox;}
p{ color: checkbox-container;}
p{ color: checkbox-label;}
p{ color: checkmenuitem;}
p{ color: dialog;}
p{ color: groupbox;}
p{ color: listbox;}
p{ color: menuarrow;}
p{ color: menucheckbox;}
p{ color: menuimage;}
p{ color: menuitem;}
p{ color: menuitemtext;}
p{ color: menulist;}
p{ color: menulist-button;}
p{ color: menulist-text;}
p{ color: menulist-textfield;}
p{ color: menupopup;}
p{ color: menuradio;}
p{ color: menuseparator;}
p{ color: progressbar;}
p{ color: progresschunk;}
p{ color: radio;}
p{ color: radio-container;}
p{ color: radio-label;}
p{ color: radiomenuitem;}
p{ color: resizer;}
p{ color: resizerpanel;}
p{ color: scale-horizontal;}
p{ color: scalethumb-horizontal;}
p{ color: scalethumb-vertical;}
p{ color: scale-vertical;}
p{ color: scrollbarbutton-down;}
p{ color: scrollbarbutton-left;}
p{ color: scrollbarbutton-right;}
p{ color: scrollbarbutton-up;}
p{ color: scrollbar-small;}
p{ color: scrollbarthumb-horizontal;}
p{ color: scrollbarthumb-vertical;}
p{ color: scrollbartrack-horizontal;}
p{ color: scrollbartrack-vertical;}
p{ color: separator;}
p{ color: spinner;}
p{ color: spinner-downbutton;}
p{ color: spinner-textfield;}
p{ color: spinner-upbutton;}
p{ color: statusbar;}
p{ color: statusbarpanel;}
p{ color: tab;}
p{ color: tabpanels;}
p{ color: tab-scroll-arrow-back;}
p{ color: tab-scroll-arrow-forward;}
p{ color: textfield;}
p{ color: textfield-multiline;}
p{ color: toolbar;}
p{ color: toolbarbutton-dropdown;}
p{ color: toolbox;}
p{ color: tooltip;}
p{ color: treeheadercell;}
p{ color: treeheadersortarrow;}
p{ color: treeitem;}
p{ color: treetwisty;}
p{ color: treetwistyopen;}
p{ color: treeview;}
p{ color: window;}


/* prefixed named values */

p { color: -moz-activehyperlinktext;}
p { color: -moz-hyperlinktext;}
p { color: -moz-visitedhyperlinktext;}
p { color: -moz-buttondefault;}
p { color: -moz-buttonhoverface;}
p { color: -moz-buttonhovertext;}
p { color: -moz-default-background-color;}
p { color: -moz-default-color;}
p { color: -moz-cellhighlight;}
p { color: -moz-cellhighlighttext;}
p { color: -moz-field;}
p { color: -moz-fieldtext;}
p { color: -moz-dialog;}
p { color: -moz-dialogtext;}
p { color: -moz-dragtargetzone;}
p { color: -moz-mac-accentdarkestshadow;}
p { color: -moz-mac-accentdarkshadow;}
p { color: -moz-mac-accentface;}
p { color: -moz-mac-accentlightesthighlight;}
p { color: -moz-mac-accentlightshadow;}
p { color: -moz-mac-accentregularhighlight;}
p { color: -moz-mac-accentregularshadow;}
p { color: -moz-mac-chrome-active;}
p { color: -moz-mac-chrome-inactive;}
p { color: -moz-mac-focusring;}
p { color: -moz-mac-menuselect;}
p { color: -moz-mac-menushadow;}
p { color: -moz-mac-menutextselect;}
p { color: -moz-menuhover;}
p { color: -moz-menuhovertext;}
p { color: -moz-win-communicationstext;}
p { color: -moz-win-mediatext;}
p { color: -moz-nativehyperlinktext;}
p { color: -moz-box;}
p { color: -moz-inline-box;}
p { color: -moz-inline-grid;}
p { color: -moz-inline-stack;}
p { color: -moz-grid;}
p { color: -moz-grid-group;}
p { color: -moz-grid-line;}
p { color: -moz-groupbox;}
p { color: -moz-deck;}
p { color: -moz-popup;}
p { color: -moz-stack;}
p { color: -moz-marker;}
p { color: -moz-show-background;}
p { color: -moz-button;}
p { color: -moz-info;}
p { color: -moz-desktop;}
p { color: -moz-dialog;}
p { color: -moz-document;}
p { color: -moz-workspace;}
p { color: -moz-window;}
p { color: -moz-list;}
p { color: -moz-pull-down-menu;}
p { color: -moz-field;}
p { color: -moz-fixed;}
p { color: -moz-crisp-edges;}
p { color: -moz-arabic-indic;}
p { color: -moz-bengali;}
p { color: -moz-cjk-earthly-branch;}
p { color: -moz-cjk-heavenly-stem;}
p { color: -moz-devanagari;}
p { color: -moz-ethiopic-halehame;}
p { color: -moz-ethiopic-halehame-am;}
p { color: -moz-ethiopic-halehame-ti-er;}
p { color: -moz-ethiopic-halehame-ti-et;}
p { color: -moz-ethiopic-numeric;}
p { color: -moz-gujarati;}
p { color: -moz-gurmukhi;}
p { color: -moz-hangul;}
p { color: -moz-hangul-consonant;}
p { color: -moz-japanese-formal;}
p { color: -moz-japanese-informal;}
p { color: -moz-kannada;}
p { color: -moz-khmer;}
p { color: -moz-lao;}
p { color: -moz-malayalam;}
p { color: -moz-myanmar;}
p { color: -moz-oriya;}
p { color: -moz-persian;}
p { color: -moz-simp-chinese-formal;}
p { color: -moz-simp-chinese-informal;}
p { color: -moz-tamil;}
p { color: -moz-telugu;}
p { color: -moz-thai;}
p { color: -moz-trad-chinese-formal;}
p { color: -moz-trad-chinese-informal;}
p { color: -moz-urdu;}
p { color: -moz-hidden-unscrollable;}
p { color: -moz-center;}
p { color: -moz-left;}
p { color: -moz-right;}
p { color: -moz-anchor-decoration;}
p { color: -moz-all;}
p { color: -moz-none;}
p { color: -moz-min-content;}
p { color: -moz-fit-content;}
p { color: -moz-max-content;}
p { color: -moz-available;}
p { color: -moz-mac-unified-toolbar;}
p { color: -moz-win-borderless-glass;}
p { color: -moz-win-browsertabbar-toolbox;}
p { color: -moz-win-communications-toolbox;}
p { color: -moz-win-glass;}
p { color: -moz-win-media-toolbox;}
p { color: -moz-window-button-box;}
p { color: -moz-window-button-box-maximized;}
p { color: -moz-window-button-close;}
p { color: -moz-window-button-maximize;}
p { color: -moz-window-button-minimize;}
p { color: -moz-window-button-restore;}
p { color: -moz-window-titlebar;}
p { color: -moz-window-titlebar-maximized;}

/* moz prefixed pseudo-elements */

p::-moz-anonymous-block {}
p::-moz-anonymous-positioned-block {}
p::-moz-canvas {}
p::-moz-cell-content {}
p::-moz-focus-inner {}
p::-moz-focus-outer {}
p::-moz-inline-table {}
p::-moz-math-stretchy {}
p::-moz-page {}
p::-moz-page-sequence {}
p::-moz-pagebreak {}
p::-moz-pagecontent {}
p::-moz-placeholder {}
p::-moz-progress-bar {}
p::-moz-range-thumb {}
p::-moz-range-track {}
p::-moz-selection {}
p::-moz-scrolled-canvas {}
p::-moz-scrolled-content {}
p::-moz-scrolled-page-sequence {}
p::-moz-svg-foreign-content {}
p::-moz-table {}
p::-moz-table-cell {}
p::-moz-table-column {}
p::-moz-table-column-group {}
p::-moz-table-outer {}
p::-moz-table-row {}
p::-moz-table-row-group {}
p::-moz-viewport {}
p::-moz-viewport-scroll {}
p::-moz-xul-anonymous-block {}


/* moz prefixed pseudo-classes */

p:-moz-any {}
p:-moz-any-link {}
p:-moz-bound-element {}
p:-moz-broken {}
p:-moz-drag-over {}
p:-moz-first-node {}
p:-moz-focusring {}
p:-moz-full-screen {}
p:-moz-full-screen-ancestor {}
p:-moz-handler-blocked {}
p:-moz-handler-crashed {}
p:-moz-handler-disabled {}
p:-moz-last-node {}
p:-moz-list-bullet {}
p:-moz-list-number {}
p:-moz-loading {}
p:-moz-lwtheme {}
p:-moz-lwtheme-brighttext {}
p:-moz-lwtheme-darktext {}
p:-moz-only-whitespace {}
p:-moz-placeholder {}
p:-moz-read-only {}
p:-moz-read-write {}
p:-moz-suppressed {}
p:-moz-submit-invalid {}
p:-moz-tree-checkbox {}
p:-moz-tree-cell {}
p:-moz-tree-cell-text {}
p:-moz-tree-column {}
p:-moz-tree-drop-feedback {}
p:-moz-tree-image {}
p:-moz-tree-indentation {}
p:-moz-tree-line {}
p:-moz-tree-progressmeter {}
p:-moz-tree-row {}
p:-moz-tree-separator {}
p:-moz-tree-twisty {}
p:-moz-ui-invalid {}
p:-moz-ui-valid {}
p:-moz-user-disabled {}
p:-moz-window-inactive {}

/* moz prefixed pseudo-class functions */

p:-moz-locale-dir(ltr) {}
p:-moz-locale-dir(rtl) {}
p:-moz-system-metric(images-in-menus) {}
p:-moz-system-metric(mac-graphite-theme) {}
p:-moz-system-metric(scrollbar-end-backward) {}
p:-moz-system-metric(scrollbar-end-forward) {}
p:-moz-system-metric(scrollbar-start-backward) {}
p:-moz-system-metric(scrollbar-start-forward) {}
p:-moz-system-metric(scrollbar-thumb-proportional) {}
p:-moz-system-metric(touch-enabled) {}
p:-moz-system-metric(windows-default-theme) {}
p:-moz-tree-cell-text(hover) {}
p:-moz-tree-row(hover) {}

p{-epub-break-after: blue;}
p{-epub-break-before: blue;}
p{-epub-break-inside: blue;}
p{-epub-caption-side: blue;}
p{-epub-columms: blue;}
p{-epub-column-count: blue;}
p{-epub-column-fill: blue;}
p{-epub-column-gap: blue;}
p{-epub-column-rule: blue;}
p{-epub-column-rule-color: blue;}
p{-epub-column-rule-style: blue;}
p{-epub-column-rule-width: blue;}
p{-epub-column-width: blue;}
p{-epub-cue: blue;}
p{-epub-cue-after: blue;}
p{-epub-cue-before: blue;}
p{-epub-hyphens: blue;}
p{-epub-line-break: blue;}
p{-epub-pause: blue;}
p{-epub-pause-after: blue;}
p{-epub-pause-before: blue;}
p{-epub-rest: blue;}
p{-epub-rest-after: blue;}
p{-epub-rest-before: blue;}
p{-epub-ruby-position: blue;}
p{-epub-speak: blue;}
p{-epub-speak-as: blue;}
p{-epub-text-align-last: blue;}
p{-epub-text-combine: blue;}
p{-epub-text-emphasis: blue;}
p{-epub-text-emphasis-color: blue;}
p{-epub-text-emphasis-style: blue;}
p{-epub-text-orientation: blue;}
p{-epub-text-transform: blue;}
p{-epub-text-trim: blue;}
p{-epub-voice-balance: blue;}
p{-epub-voice-duration: blue;}
p{-epub-voice-family: blue;}
p{-epub-voice-pitch: blue;}
p{-epub-voice-range: blue;}
p{-epub-voice-rate: blue;}
p{-epub-voice-stress: blue;}
p{-epub-voice-volume: blue;}
p{-epub-word-break: blue;}
p{-epub-writing-mode: blue;}



p {-webkit-dashboard-region: blue;}



/* deprecated */

hgroup {}
div:after
div:before
div:first-line
div:first-letter

p { color: -moz-use-text-color;}
p { color: -moz-bg-inset;}
p { color: -moz-bg-outset;}
p { color: -moz-bg-solid;}
p { color: -moz-inline-block;}
p { color: -moz-inline-table;}
p { color: -moz-scrollbars-none;}
p { color: -moz-scrollbars-horizontal;}
p { color: -moz-scrollbars-vertical;}
