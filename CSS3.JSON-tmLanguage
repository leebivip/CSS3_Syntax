// [PackageDev] target_format: plist, ext: tmLanguage
{
    "name": "CSS3",
    "scopeName": "text.css",
    "fileTypes": ["css"],
    "uuid": "0c288c1d-d424-476c-aa24-4dac097194a6",

    "patterns": [
        {
            "name": "keyword.other.css",  // FIXME: correct name?
            "match": "(em|ex|ch|rem|vh|vw|vmin|vmax|px|mm|cm|in|pt|pc|mozmm|ms|s|dpcm|dpi|dppx|deg|grad|rad|turn|khz|hz|%)",
            // "captures": {
            //     "1": {"name": "constant.numeric.css"}
            // },
            "comment": "Units (px, em)"       // should match number, unit, but only color the unit
        },
        {
            "name": "id",
            "match": "regex",
            "comment": "Element ID (#header, #logo)"
        },
        {
            "name": "class",
            "match": "regex",
            "comment": "Element class (.comment, .alert)"
        },
        {
            "name": "constant.numeric.css",
            "match": "(\\+|-)?[0-9]+|[0-9]*\\.[0-9]+",
            "comment": "numeric literals (45, 3.14)"
        },
        {
            "name": "pseudo class",
            "match": "regex",
            "comment": "Pseudo class (:hover, :first-child)"
        },
        {
            "name": "pseudo element",
            "match": "regex",
            "comment": "Pseudo element (::first-line, ::after)"
        },
        {
            "name": "function",
            "match": "regex",
            "comment": "Function (url(), calc())"
        },
        {
            "name": "@ rule",
            "match": "regex",
            "comment": "@ rule (@media, @import)"
        },
        {
            "name": "storage.type.css",  // FIXME: probably the wrong name (entity.name.tag??)
            "match": "\\b(align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|auto|backface-visibility|background-attachment|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|background|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-bottom|border-collapse|border-color|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-image|border-left-color|border-left-style|border-left-width|border-left|border-radius|border-right-color|border-right-style|border-right-width|border-right|border-spacing|border-style|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-top|border-width|border|bottom|box-decoration-break|box-shadow|box-sizing|break-after|break-before|break-inside|caption-side|clear|clip|clip-path|color|columns|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|content|counter-increment|counter-reset|cursor|direction|display|empty-cells|filter|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|flex|float|font-family|font-feature-settings|font-kerning|font-language-override|font-size-adjust|font-size|font-stretch|font-style|font-synthesis|font-variant-alternates|font-variant-caps|font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-variant|font-weight|font|height|hyphens|icon|image-rendering|image-resolution|image-orientation|ime-mode|inherit|initial|justify-content|left|letter-spacing|line-height|list-style-image|list-style-position|list-style-type|list-style|margin-bottom|margin-left|margin-right|margin-top|margin|marks|mask|mask-type|max-height|max-width|min-height|min-width|nav-down|nav-index|nav-left|nav-right|nav-up|none|normal|object-fit|object-position|opacity|order|orphans|outline-color|outline-offset|outline-style|outline-width|outline|overflow|overflow-wrap|overflow-x|overflow-y|padding-bottom|padding-left|padding-right|padding-top|padding|page-break-after|page-break-before|page-break-inside|perspective-origin|perspective|pointer-events|position|quotes|resize|right|table-layout|tab-size|text-align-last|text-align|text-combine-horizontal|text-decoration-color|text-decoration-line|text-decoration-style|text-decoration|text-indent|text-orientation|text-overflow|text-rendering|text-shadow|text-transform|text-underline-position|top|touch-action|transform-origin|transform-style|transform|transition-delay|transition-duration|transition-property|transition-timing-function|transition|unicode-bidi|unicode-range|vertical-align|visibility|white-space|widows|width|word-break|word-spacing|word-wrap|writing-mode|z-index)\\b",
            "comment": "Properties (color, margin-left)"
        },
        {
            "name": "keyword.tags.css",
            "match": "\\b(html|head|title|base|link|meta|style|script|noscript|body|section|nav|article|aside|h1|h2|h3|h4|h5|h6|header|footer|address|main|p|hr|pre|blockquote|ol|ul|li|dl|dt|dd|figure|figcaption|div|a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img|iframe|embed|object|param|video|audio|source|track|canvas|map|area|svg|math|table|caption|colgroup|col|tbody|thead|tfoot|tr|td|th|form|fieldset|legend|label|input|button|select|datalist|optgroup|option|textarea|keygen|output|progress|meter|details|summary|menuitem|menu)\\b",
            "comment": "HTML elements (body, nav)"
        },
        {
            "name": "string.quoted.double.css",
            "match": "\\\"([^\\n\\r\\f\\\\\"]|\\\\(\\n|\\r\\n|\\r|\\f)|((\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)|\\\\[^\\n\\r\\f0-9a-f]))*\\\"",
            "comment": "double-quoted strings"
        },
        {
            "name": "string.quoted.single.css",
            "match": "\\'([^\\n\\r\\f\\\\']|\\\\(\\n|\\r\\n|\\r|\\f)|((\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?)|\\\\[^\\n\\r\\f0-9a-f]))*\\'",
            "comment": "single-quoted strings"
        },
        {
            "name": "comment.block.css",
            "match": "\/\*[^*]*\*+([^/*][^*]*\*+)*\/",

            // "begin": "(?=/\\*)",
            // "end": "(?<=\\*/)",
            "comment": "block comments"
        }
    ]
}
